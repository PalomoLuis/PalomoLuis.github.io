"use strict";(self.webpackChunkguesswho=self.webpackChunkguesswho||[]).push([[826],{402:(r,n,e)=>{e.d(n,{Z:()=>a});var t=e(537),o=e.n(t),i=e(645),s=e.n(i)()(o());s.push([r.id,"@import url(https://fonts.googleapis.com/css2?family=Figtree:wght@400;700&family=Rammetto+One&display=swap);"]),s.push([r.id,":root {\r\n  --white: #ffffff;\r\n  --blue-light: #7aabcc;\r\n  --blue-mid: #3688bf;\r\n  --error-color: #ff0808;\r\n\r\n  --size-xxs: 4px;\r\n  --size-xs: 8px;\r\n  --size-s: 16px;\r\n  --size-m: 32px;\r\n  --size-l: 64px;\r\n  --size-xl: 128px;\r\n  --size-xxl: 256px;\r\n}\r\n\r\n/* MAIN STYLES */\r\n\r\nbody, html {\r\n  width: 100%;\r\n  height: 100%;\r\n  box-sizing: border-box;\r\n  margin: 0;\r\n  font-family: 'Figtree', sans-serif;\r\n}\r\nhtml * {\r\n  font-family: 'Figtree', sans-serif;\r\n}\r\n.main_container {\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: var(--blue-light);\r\n}\r\n\r\nh1 {\r\n  font-family: 'Rammetto One', sans-serif;\r\n  font-size: 3rem;\r\n}\r\n\r\ninput {\r\n  font-size: 1rem;\r\n  padding: var(--size-xs);\r\n  border-radius: var(--size-xs);\r\n  border: 2px var(--white) solid;\r\n  background: transparent;\r\n  color: white;\r\n}\r\n\r\ninput:active,\r\ninput:focus,\r\ninput:focus-visible {\r\n  border-color: var(--blue-mid);\r\n  color: var(--blue-mid);\r\n  outline: none;\r\n}\r\n\r\n.btn {\r\n  font-size: 1rem;\r\n  border: none;\r\n  padding: var(--size-xs) var(--size-s);\r\n  border-radius: var(--size-xs);\r\n  letter-spacing: 0.05rem;\r\n  cursor: pointer;\r\n}\r\n.btn:hover {\r\n  transition: 300ms;\r\n}\r\n\r\n.flex_center {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.d_none {\r\n  display: none;\r\n}","",{version:3,sources:["webpack://./src/css/style.css"],names:[],mappings:"AAEA;EACE,gBAAgB;EAChB,qBAAqB;EACrB,mBAAmB;EACnB,sBAAsB;;EAEtB,eAAe;EACf,cAAc;EACd,cAAc;EACd,cAAc;EACd,cAAc;EACd,gBAAgB;EAChB,iBAAiB;AACnB;;AAEA,gBAAgB;;AAEhB;EACE,WAAW;EACX,YAAY;EACZ,sBAAsB;EACtB,SAAS;EACT,kCAAkC;AACpC;AACA;EACE,kCAAkC;AACpC;AACA;EACE,WAAW;EACX,YAAY;EACZ,mCAAmC;AACrC;;AAEA;EACE,uCAAuC;EACvC,eAAe;AACjB;;AAEA;EACE,eAAe;EACf,uBAAuB;EACvB,6BAA6B;EAC7B,8BAA8B;EAC9B,uBAAuB;EACvB,YAAY;AACd;;AAEA;;;EAGE,6BAA6B;EAC7B,sBAAsB;EACtB,aAAa;AACf;;AAEA;EACE,eAAe;EACf,YAAY;EACZ,qCAAqC;EACrC,6BAA6B;EAC7B,uBAAuB;EACvB,eAAe;AACjB;AACA;EACE,iBAAiB;AACnB;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,aAAa;AACf",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Figtree:wght@400;700&family=Rammetto+One&display=swap');\r\n\r\n:root {\r\n  --white: #ffffff;\r\n  --blue-light: #7aabcc;\r\n  --blue-mid: #3688bf;\r\n  --error-color: #ff0808;\r\n\r\n  --size-xxs: 4px;\r\n  --size-xs: 8px;\r\n  --size-s: 16px;\r\n  --size-m: 32px;\r\n  --size-l: 64px;\r\n  --size-xl: 128px;\r\n  --size-xxl: 256px;\r\n}\r\n\r\n/* MAIN STYLES */\r\n\r\nbody, html {\r\n  width: 100%;\r\n  height: 100%;\r\n  box-sizing: border-box;\r\n  margin: 0;\r\n  font-family: 'Figtree', sans-serif;\r\n}\r\nhtml * {\r\n  font-family: 'Figtree', sans-serif;\r\n}\r\n.main_container {\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: var(--blue-light);\r\n}\r\n\r\nh1 {\r\n  font-family: 'Rammetto One', sans-serif;\r\n  font-size: 3rem;\r\n}\r\n\r\ninput {\r\n  font-size: 1rem;\r\n  padding: var(--size-xs);\r\n  border-radius: var(--size-xs);\r\n  border: 2px var(--white) solid;\r\n  background: transparent;\r\n  color: white;\r\n}\r\n\r\ninput:active,\r\ninput:focus,\r\ninput:focus-visible {\r\n  border-color: var(--blue-mid);\r\n  color: var(--blue-mid);\r\n  outline: none;\r\n}\r\n\r\n.btn {\r\n  font-size: 1rem;\r\n  border: none;\r\n  padding: var(--size-xs) var(--size-s);\r\n  border-radius: var(--size-xs);\r\n  letter-spacing: 0.05rem;\r\n  cursor: pointer;\r\n}\r\n.btn:hover {\r\n  transition: 300ms;\r\n}\r\n\r\n.flex_center {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.d_none {\r\n  display: none;\r\n}"],sourceRoot:""}]);const a=s},74:(r,n,e)=>{e.d(n,{Z:()=>a});var t=e(537),o=e.n(t),i=e(645),s=e.n(i)()(o());s.push([r.id,"","",{version:3,sources:[],names:[],mappings:"",sourceRoot:""}]);const a=s},722:(r,n,e)=>{e.d(n,{Z:()=>a});var t=e(537),o=e.n(t),i=e(645),s=e.n(i)()(o());s.push([r.id,".home_container {\r\n    flex-direction: column;\r\n}\r\n\r\n.home_logo {\r\n    font-size: clamp(3rem, 10vw, 6rem);\r\n    line-height: 1;\r\n    letter-spacing: -0.2rem;\r\n    color: var(--white);\r\n    margin: 0 0 var(--size-m) 0;\r\n}\r\n\r\n.home_settings {\r\n    flex-direction: column;\r\n    padding: var(--size-m);\r\n    background-color: var(--white);\r\n    border-radius: var(--size-s);\r\n    position: relative;\r\n}\r\n\r\n.home_settings:hover {\r\n    transition: 300ms;\r\n    transform: scale(1.1)\r\n  }\r\n\r\n.home_levels {\r\n    display: flex;\r\n    margin-bottom: var(--size-s);\r\n}\r\n\r\n.home_settings input {\r\n    border-color: var(--blue-light);\r\n    color: var(--blue-light);\r\n    border-radius: var(--size-xs) 0 0 var(--size-xs);\r\n    width: 100px;\r\n    font-size: 1.4rem;\r\n}\r\n\r\n.home_levels_arrows {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-left: 2px;\r\n}\r\n\r\n.home_levels_arrows button {\r\n    border: none;\r\n    height: 24px;\r\n    padding: 0 var(--size-xxs);\r\n    background-color: var(--blue-light);\r\n    color: var(--white);\r\n    cursor: pointer;\r\n}\r\n.home_levels_arrows button:hover, .home_settings .btn:hover {\r\n    background-color: var(--blue-mid);\r\n}\r\n\r\n.home_levels_arrows button.arrow_up {\r\n    border-radius: 0 var(--size-xs) 0 0;\r\n}\r\n.home_levels_arrows button.arrow_down {\r\n    border-radius:  0 0 var(--size-xs) 0;\r\n    margin-top: 2px;\r\n}\r\n\r\n.home_settings .btn {\r\n    background-color: var(--blue-light);\r\n    color: var(--white);\r\n    font-size: 1.5rem;\r\n    font-weight: bold;\r\n    letter-spacing: 0;\r\n    width: 154px;\r\n}\r\n\r\n.home_error_alert {\r\n    padding: var(--size-xs) var(--size-s);\r\n    background-color: var(--error-color);\r\n    position: absolute;\r\n    bottom: 0;\r\n    right: 0;\r\n    transform: translate(20%, 60%) rotate(-4deg);\r\n    width: 100%;\r\n    font-size: 1.2rem;\r\n    color: var(--white);\r\n    border-radius: var(--size-s);\r\n    opacity: 0;\r\n}","",{version:3,sources:["webpack://./src/modules/home/home.css"],names:[],mappings:"AAAA;IACI,sBAAsB;AAC1B;;AAEA;IACI,kCAAkC;IAClC,cAAc;IACd,uBAAuB;IACvB,mBAAmB;IACnB,2BAA2B;AAC/B;;AAEA;IACI,sBAAsB;IACtB,sBAAsB;IACtB,8BAA8B;IAC9B,4BAA4B;IAC5B,kBAAkB;AACtB;;AAEA;IACI,iBAAiB;IACjB;EACF;;AAEF;IACI,aAAa;IACb,4BAA4B;AAChC;;AAEA;IACI,+BAA+B;IAC/B,wBAAwB;IACxB,gDAAgD;IAChD,YAAY;IACZ,iBAAiB;AACrB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,gBAAgB;AACpB;;AAEA;IACI,YAAY;IACZ,YAAY;IACZ,0BAA0B;IAC1B,mCAAmC;IACnC,mBAAmB;IACnB,eAAe;AACnB;AACA;IACI,iCAAiC;AACrC;;AAEA;IACI,mCAAmC;AACvC;AACA;IACI,oCAAoC;IACpC,eAAe;AACnB;;AAEA;IACI,mCAAmC;IACnC,mBAAmB;IACnB,iBAAiB;IACjB,iBAAiB;IACjB,iBAAiB;IACjB,YAAY;AAChB;;AAEA;IACI,qCAAqC;IACrC,oCAAoC;IACpC,kBAAkB;IAClB,SAAS;IACT,QAAQ;IACR,4CAA4C;IAC5C,WAAW;IACX,iBAAiB;IACjB,mBAAmB;IACnB,4BAA4B;IAC5B,UAAU;AACd",sourcesContent:[".home_container {\r\n    flex-direction: column;\r\n}\r\n\r\n.home_logo {\r\n    font-size: clamp(3rem, 10vw, 6rem);\r\n    line-height: 1;\r\n    letter-spacing: -0.2rem;\r\n    color: var(--white);\r\n    margin: 0 0 var(--size-m) 0;\r\n}\r\n\r\n.home_settings {\r\n    flex-direction: column;\r\n    padding: var(--size-m);\r\n    background-color: var(--white);\r\n    border-radius: var(--size-s);\r\n    position: relative;\r\n}\r\n\r\n.home_settings:hover {\r\n    transition: 300ms;\r\n    transform: scale(1.1)\r\n  }\r\n\r\n.home_levels {\r\n    display: flex;\r\n    margin-bottom: var(--size-s);\r\n}\r\n\r\n.home_settings input {\r\n    border-color: var(--blue-light);\r\n    color: var(--blue-light);\r\n    border-radius: var(--size-xs) 0 0 var(--size-xs);\r\n    width: 100px;\r\n    font-size: 1.4rem;\r\n}\r\n\r\n.home_levels_arrows {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-left: 2px;\r\n}\r\n\r\n.home_levels_arrows button {\r\n    border: none;\r\n    height: 24px;\r\n    padding: 0 var(--size-xxs);\r\n    background-color: var(--blue-light);\r\n    color: var(--white);\r\n    cursor: pointer;\r\n}\r\n.home_levels_arrows button:hover, .home_settings .btn:hover {\r\n    background-color: var(--blue-mid);\r\n}\r\n\r\n.home_levels_arrows button.arrow_up {\r\n    border-radius: 0 var(--size-xs) 0 0;\r\n}\r\n.home_levels_arrows button.arrow_down {\r\n    border-radius:  0 0 var(--size-xs) 0;\r\n    margin-top: 2px;\r\n}\r\n\r\n.home_settings .btn {\r\n    background-color: var(--blue-light);\r\n    color: var(--white);\r\n    font-size: 1.5rem;\r\n    font-weight: bold;\r\n    letter-spacing: 0;\r\n    width: 154px;\r\n}\r\n\r\n.home_error_alert {\r\n    padding: var(--size-xs) var(--size-s);\r\n    background-color: var(--error-color);\r\n    position: absolute;\r\n    bottom: 0;\r\n    right: 0;\r\n    transform: translate(20%, 60%) rotate(-4deg);\r\n    width: 100%;\r\n    font-size: 1.2rem;\r\n    color: var(--white);\r\n    border-radius: var(--size-s);\r\n    opacity: 0;\r\n}"],sourceRoot:""}]);const a=s},612:(r,n,e)=>{e.d(n,{Z:()=>a});var t=e(537),o=e.n(t),i=e(645),s=e.n(i)()(o());s.push([r.id,".loading_cont i{\r\n    animation: rotate 1s linear infinite;\r\n    color: white;\r\n    font-size: 60px;\r\n    transition: 600ms ease-in ;\r\n}\r\n\r\n@keyframes rotate {\r\n    0% {\r\n        transform: rotate(0);\r\n    }\r\n    100% {\r\n        transform: rotate(360deg);\r\n    }\r\n}","",{version:3,sources:["webpack://./src/modules/loadingPage/loadingPage.css"],names:[],mappings:"AAAA;IACI,oCAAoC;IACpC,YAAY;IACZ,eAAe;IACf,0BAA0B;AAC9B;;AAEA;IACI;QACI,oBAAoB;IACxB;IACA;QACI,yBAAyB;IAC7B;AACJ",sourcesContent:[".loading_cont i{\r\n    animation: rotate 1s linear infinite;\r\n    color: white;\r\n    font-size: 60px;\r\n    transition: 600ms ease-in ;\r\n}\r\n\r\n@keyframes rotate {\r\n    0% {\r\n        transform: rotate(0);\r\n    }\r\n    100% {\r\n        transform: rotate(360deg);\r\n    }\r\n}"],sourceRoot:""}]);const a=s},80:(r,n,e)=>{e.d(n,{Z:()=>a});var t=e(537),o=e.n(t),i=e(645),s=e.n(i)()(o());s.push([r.id,".game_container {\r\n    flex-direction: column;\r\n}\r\n\r\n.game_container h2 {\r\n    color: var(--white);\r\n}\r\n\r\n.game_cards_cont {\r\n    background-color: var(--white);\r\n    border-radius: var(--size-m);\r\n    padding: var(--size-m);\r\n}\r\n\r\n.game_cards_cont ul {\r\n    margin: 0;\r\n    padding: 0;\r\n    display: grid;\r\n    /* grid-template-columns: repeat(5, 1fr); */\r\n    gap: var(--size-xs);\r\n}\r\n\r\n.game_cards_cont li.pokecard {\r\n    list-style: none;\r\n    padding: var(--size-xxs);\r\n    border-radius: var(--size-s);\r\n    border: 2px var(--blue-light) solid;\r\n    width: 96px;\r\n    height: 96px;\r\n    overflow: hidden;\r\n    position: relative;\r\n    cursor: pointer;\r\n}\r\n\r\n.game_cards_cont li.pokecard img {\r\n    width: 96px;\r\n    height: 96px;\r\n    pointer-events: none;\r\n}\r\n.game_cards_cont li.pokecard .cover_card {\r\n    width: calc(100% + 2px);\r\n    height: calc(100% + 2px);\r\n    background-color: var(--blue-light);\r\n    position: absolute;\r\n    top: -1px;\r\n    left: -1px;\r\n    pointer-events: none;\r\n}\r\n\r\n.game_cards_cont .cover_card_icon {\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    color: var(--white);\r\n    font-size: 2rem;\r\n    pointer-events: none;\r\n}\r\n\r\n.game_cards_cont li.pokecard:hover .cover_card {\r\n    background-color: var(--white);\r\n    transition: 200ms ease;\r\n}\r\n.game_cards_cont li.pokecard:hover .cover_card_icon {\r\n    color: var(--blue-light);\r\n}\r\n\r\n","",{version:3,sources:["webpack://./src/modules/startGame/startGame.css"],names:[],mappings:"AAAA;IACI,sBAAsB;AAC1B;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,8BAA8B;IAC9B,4BAA4B;IAC5B,sBAAsB;AAC1B;;AAEA;IACI,SAAS;IACT,UAAU;IACV,aAAa;IACb,2CAA2C;IAC3C,mBAAmB;AACvB;;AAEA;IACI,gBAAgB;IAChB,wBAAwB;IACxB,4BAA4B;IAC5B,mCAAmC;IACnC,WAAW;IACX,YAAY;IACZ,gBAAgB;IAChB,kBAAkB;IAClB,eAAe;AACnB;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,oBAAoB;AACxB;AACA;IACI,uBAAuB;IACvB,wBAAwB;IACxB,mCAAmC;IACnC,kBAAkB;IAClB,SAAS;IACT,UAAU;IACV,oBAAoB;AACxB;;AAEA;IACI,kBAAkB;IAClB,QAAQ;IACR,SAAS;IACT,gCAAgC;IAChC,mBAAmB;IACnB,eAAe;IACf,oBAAoB;AACxB;;AAEA;IACI,8BAA8B;IAC9B,sBAAsB;AAC1B;AACA;IACI,wBAAwB;AAC5B",sourcesContent:[".game_container {\r\n    flex-direction: column;\r\n}\r\n\r\n.game_container h2 {\r\n    color: var(--white);\r\n}\r\n\r\n.game_cards_cont {\r\n    background-color: var(--white);\r\n    border-radius: var(--size-m);\r\n    padding: var(--size-m);\r\n}\r\n\r\n.game_cards_cont ul {\r\n    margin: 0;\r\n    padding: 0;\r\n    display: grid;\r\n    /* grid-template-columns: repeat(5, 1fr); */\r\n    gap: var(--size-xs);\r\n}\r\n\r\n.game_cards_cont li.pokecard {\r\n    list-style: none;\r\n    padding: var(--size-xxs);\r\n    border-radius: var(--size-s);\r\n    border: 2px var(--blue-light) solid;\r\n    width: 96px;\r\n    height: 96px;\r\n    overflow: hidden;\r\n    position: relative;\r\n    cursor: pointer;\r\n}\r\n\r\n.game_cards_cont li.pokecard img {\r\n    width: 96px;\r\n    height: 96px;\r\n    pointer-events: none;\r\n}\r\n.game_cards_cont li.pokecard .cover_card {\r\n    width: calc(100% + 2px);\r\n    height: calc(100% + 2px);\r\n    background-color: var(--blue-light);\r\n    position: absolute;\r\n    top: -1px;\r\n    left: -1px;\r\n    pointer-events: none;\r\n}\r\n\r\n.game_cards_cont .cover_card_icon {\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    color: var(--white);\r\n    font-size: 2rem;\r\n    pointer-events: none;\r\n}\r\n\r\n.game_cards_cont li.pokecard:hover .cover_card {\r\n    background-color: var(--white);\r\n    transition: 200ms ease;\r\n}\r\n.game_cards_cont li.pokecard:hover .cover_card_icon {\r\n    color: var(--blue-light);\r\n}\r\n\r\n"],sourceRoot:""}]);const a=s},200:(r,n,e)=>{e.d(n,{Z:()=>a});var t=e(537),o=e.n(t),i=e(645),s=e.n(i)()(o());s.push([r.id,".win_container {\r\n    position: relative;\r\n    width: min(700px, 90vw);\r\n    height: min(270px, 70vw);\r\n    opacity: 0;\r\n}\r\n\r\n.win_container h1 {\r\n    color: var(--white);\r\n    font-size: min(var(--size-xl), 14vw);\r\n    line-height: min(var(--size-xl), 14vw);\r\n    position: absolute;\r\n    top: 0;\r\n    width: 100%;\r\n    text-align: center;\r\n    margin: 0;\r\n}\r\n\r\n.win_container .sub-section {\r\n    position: absolute;\r\n    top: 55%;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    display: flex;\r\n    align-items: center;\r\n    gap: var(--size-s);\r\n}\r\n\r\n.win_container .sub-section h2 {\r\n    font-size: min(var(--size-m), 6vw);\r\n    margin: 0;\r\n    color: var(--blue-light);\r\n    background-color: var(--white);\r\n    padding: var(--size-s) var(--size-m);\r\n    border-radius: var(--size-m);\r\n}\r\n\r\n.win_container .sub-section i {\r\n    color: var(--white);\r\n    font-size: min(var(--size-l), 10vw);\r\n}\r\n.win_container .sub-section .star_1 {\r\n    animation: rotations 3s linear infinite reverse;\r\n}\r\n.win_container .sub-section .star_2 {\r\n    animation: rotations 3s linear infinite normal;\r\n}\r\n\r\n@keyframes rotations {\r\n    0% { transform: rotate(0) scale(0.8);}\r\n    50% { transform: rotate(180deg) scale(1.3);}\r\n    100% { transform:  rotate(360deg) scale(0.8);}\r\n    \r\n}","",{version:3,sources:["webpack://./src/modules/win/win.css"],names:[],mappings:"AAAA;IACI,kBAAkB;IAClB,uBAAuB;IACvB,wBAAwB;IACxB,UAAU;AACd;;AAEA;IACI,mBAAmB;IACnB,oCAAoC;IACpC,sCAAsC;IACtC,kBAAkB;IAClB,MAAM;IACN,WAAW;IACX,kBAAkB;IAClB,SAAS;AACb;;AAEA;IACI,kBAAkB;IAClB,QAAQ;IACR,SAAS;IACT,2BAA2B;IAC3B,aAAa;IACb,mBAAmB;IACnB,kBAAkB;AACtB;;AAEA;IACI,kCAAkC;IAClC,SAAS;IACT,wBAAwB;IACxB,8BAA8B;IAC9B,oCAAoC;IACpC,4BAA4B;AAChC;;AAEA;IACI,mBAAmB;IACnB,mCAAmC;AACvC;AACA;IACI,+CAA+C;AACnD;AACA;IACI,8CAA8C;AAClD;;AAEA;IACI,KAAK,+BAA+B,CAAC;IACrC,MAAM,oCAAoC,CAAC;IAC3C,OAAO,qCAAqC,CAAC;;AAEjD",sourcesContent:[".win_container {\r\n    position: relative;\r\n    width: min(700px, 90vw);\r\n    height: min(270px, 70vw);\r\n    opacity: 0;\r\n}\r\n\r\n.win_container h1 {\r\n    color: var(--white);\r\n    font-size: min(var(--size-xl), 14vw);\r\n    line-height: min(var(--size-xl), 14vw);\r\n    position: absolute;\r\n    top: 0;\r\n    width: 100%;\r\n    text-align: center;\r\n    margin: 0;\r\n}\r\n\r\n.win_container .sub-section {\r\n    position: absolute;\r\n    top: 55%;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    display: flex;\r\n    align-items: center;\r\n    gap: var(--size-s);\r\n}\r\n\r\n.win_container .sub-section h2 {\r\n    font-size: min(var(--size-m), 6vw);\r\n    margin: 0;\r\n    color: var(--blue-light);\r\n    background-color: var(--white);\r\n    padding: var(--size-s) var(--size-m);\r\n    border-radius: var(--size-m);\r\n}\r\n\r\n.win_container .sub-section i {\r\n    color: var(--white);\r\n    font-size: min(var(--size-l), 10vw);\r\n}\r\n.win_container .sub-section .star_1 {\r\n    animation: rotations 3s linear infinite reverse;\r\n}\r\n.win_container .sub-section .star_2 {\r\n    animation: rotations 3s linear infinite normal;\r\n}\r\n\r\n@keyframes rotations {\r\n    0% { transform: rotate(0) scale(0.8);}\r\n    50% { transform: rotate(180deg) scale(1.3);}\r\n    100% { transform:  rotate(360deg) scale(0.8);}\r\n    \r\n}"],sourceRoot:""}]);const a=s},645:r=>{r.exports=function(r){var n=[];return n.toString=function(){return this.map((function(n){var e="",t=void 0!==n[5];return n[4]&&(e+="@supports (".concat(n[4],") {")),n[2]&&(e+="@media ".concat(n[2]," {")),t&&(e+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),e+=r(n),t&&(e+="}"),n[2]&&(e+="}"),n[4]&&(e+="}"),e})).join("")},n.i=function(r,e,t,o,i){"string"==typeof r&&(r=[[null,r,void 0]]);var s={};if(t)for(var a=0;a<this.length;a++){var A=this[a][0];null!=A&&(s[A]=!0)}for(var l=0;l<r.length;l++){var c=[].concat(r[l]);t&&s[c[0]]||(void 0!==i&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=i),e&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=e):c[2]=e),o&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=o):c[4]="".concat(o)),n.push(c))}},n}},537:r=>{r.exports=function(r){var n=r[1],e=r[3];if(!e)return n;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),i="/*# ".concat(o," */"),s=e.sources.map((function(r){return"/*# sourceURL=".concat(e.sourceRoot||"").concat(r," */")}));return[n].concat(s).concat([i]).join("\n")}return[n].join("\n")}},379:r=>{var n=[];function e(r){for(var e=-1,t=0;t<n.length;t++)if(n[t].identifier===r){e=t;break}return e}function t(r,t){for(var i={},s=[],a=0;a<r.length;a++){var A=r[a],l=t.base?A[0]+t.base:A[0],c=i[l]||0,d="".concat(l," ").concat(c);i[l]=c+1;var m=e(d),p={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==m)n[m].references++,n[m].updater(p);else{var h=o(p,t);t.byIndex=a,n.splice(a,0,{identifier:d,updater:h,references:1})}s.push(d)}return s}function o(r,n){var e=n.domAPI(n);return e.update(r),function(n){if(n){if(n.css===r.css&&n.media===r.media&&n.sourceMap===r.sourceMap&&n.supports===r.supports&&n.layer===r.layer)return;e.update(r=n)}else e.remove()}}r.exports=function(r,o){var i=t(r=r||[],o=o||{});return function(r){r=r||[];for(var s=0;s<i.length;s++){var a=e(i[s]);n[a].references--}for(var A=t(r,o),l=0;l<i.length;l++){var c=e(i[l]);0===n[c].references&&(n[c].updater(),n.splice(c,1))}i=A}}},569:r=>{var n={};r.exports=function(r,e){var t=function(r){if(void 0===n[r]){var e=document.querySelector(r);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(r){e=null}n[r]=e}return n[r]}(r);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(e)}},216:r=>{r.exports=function(r){var n=document.createElement("style");return r.setAttributes(n,r.attributes),r.insert(n,r.options),n}},565:(r,n,e)=>{r.exports=function(r){var n=e.nc;n&&r.setAttribute("nonce",n)}},795:r=>{r.exports=function(r){var n=r.insertStyleElement(r);return{update:function(e){!function(r,n,e){var t="";e.supports&&(t+="@supports (".concat(e.supports,") {")),e.media&&(t+="@media ".concat(e.media," {"));var o=void 0!==e.layer;o&&(t+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),t+=e.css,o&&(t+="}"),e.media&&(t+="}"),e.supports&&(t+="}");var i=e.sourceMap;i&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),n.styleTagTransform(t,r,n.options)}(n,r,e)},remove:function(){!function(r){if(null===r.parentNode)return!1;r.parentNode.removeChild(r)}(n)}}}},589:r=>{r.exports=function(r,n){if(n.styleSheet)n.styleSheet.cssText=r;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(r))}}},656:(r,n,e)=>{var t=e(379),o=e.n(t),i=e(795),s=e.n(i),a=e(569),A=e.n(a),l=e(565),c=e.n(l),d=e(216),m=e.n(d),p=e(589),h=e.n(p),u=e(722),C={};C.styleTagTransform=h(),C.setAttributes=c(),C.insert=A().bind(null,"head"),C.domAPI=s(),C.insertStyleElement=m(),o()(u.Z,C),u.Z&&u.Z.locals&&u.Z.locals;class v{constructor(r){this.config=r}startGame=()=>{this.config.callback()};createTemplate=r=>{r.innerHTML=this.template(),window.onload=()=>{document.getElementById("start_game").addEventListener("click",(r=>{this.validateInput(r)})),this.arrowLevels()}};arrowLevels=()=>{const r=document.getElementById("level_up"),n=document.getElementById("level_down");r.addEventListener("click",(r=>{this.levelUp(r)})),n.addEventListener("click",(r=>{this.levelDown(r)}))};levelUp=r=>{let n=document.querySelector("#input_level"),e=n.value;if(e>0&&e<10){let r=parseInt(e)+1;n.value=r}this.validateInput(r)};levelDown=r=>{let n=document.querySelector("#input_level"),e=n.value;if(e>0&&e<10){let r=parseInt(e)-1;n.value=r}this.validateInput(r)};validateInput=r=>{let n=document.querySelector("#input_level"),e=n.value;return e>9?(n.value=9,!1):e<1?(n.value=1,!1):e.search(/[^\a-z\s]/)?(n.value=1,this.showError("Uh! Write only a number"),console.log("Write a number"),!1):("start_game"===r.target.id&&this.startGame(),!0)};validateInput2=()=>{let r=document.querySelector("#input_level"),n=r.value;return n>9?(r.value=9,!1):n<1?(r.value=1,!1):n.search(/[^\a-z\s]/)?(r.value=1,this.showError("Uh! Write only a number"),console.log("Write a number"),!1):void 0};showError=r=>{const n=document.querySelector(".home_error_alert");n.innerHTML=r,n.classList.remove("d_none"),gsap.to(n,{duration:.3,opacity:1}),gsap.from(n,{duration:1,scale:.7,ease:"elastic.out(1, 0.3)"}),gsap.to(n,{duration:3,opacity:0,delay:4})};template=()=>`\n            <section class="home_container flex_center">\n                <h1 class="home_logo">${this.config.logo}</h1>\n                <div class="home_settings flex_center">\n                    <div class="home_levels">\n                        <input type="test" value="1" id="input_level">\n                        <div class="home_levels_arrows">\n                            <button class="arrow_up" id="level_up">\n                                <i class="material-icons">arrow_drop_up</i>\n                            </button>\n                            <button class="arrow_down" id="level_down">\n                                <i class="material-icons">arrow_drop_down</i>\n                            </button>\n                        </div>\n                    </div>\n                    <button class="btn start_game" id="start_game">${this.config.cta}</button>\n                    <div class="home_error_alert d_none"></div>\n                </div>\n            </section>\n        `}var g=e(80),B={};B.styleTagTransform=h(),B.setAttributes=c(),B.insert=A().bind(null,"head"),B.domAPI=s(),B.insertStyleElement=m(),o()(g.Z,B),g.Z&&g.Z.locals&&g.Z.locals;var f=e(612),b={};function I(r,n=[]){let e=document.createElement(r);if(n.length>=1)for(let r=0;r<n.length;r++)e.classList.add(`${n[r]}`);return e}b.styleTagTransform=h(),b.setAttributes=c(),b.insert=A().bind(null,"head"),b.domAPI=s(),b.insertStyleElement=m(),o()(f.Z,b),f.Z&&f.Z.locals&&f.Z.locals;var _=e(74),w={};w.styleTagTransform=h(),w.setAttributes=c(),w.insert=A().bind(null,"head"),w.domAPI=s(),w.insertStyleElement=m(),o()(_.Z,w),_.Z&&_.Z.locals&&_.Z.locals;var x=e(200),E={};E.styleTagTransform=h(),E.setAttributes=c(),E.insert=A().bind(null,"head"),E.domAPI=s(),E.insertStyleElement=m(),o()(x.Z,E),x.Z&&x.Z.locals&&x.Z.locals;class k{constructor(r){this.config=r}winPage=()=>{this.config.father.innerHTML=this.template(this.config.message),gsap.to(".win_container",{duration:.7,opacity:1},"startWin"),gsap.from(".win_container",{duration:.7,scale:.5,ease:Back.easeOut.config(1.7)},"startWin"),gsap.to(".win_container",{duration:3,scale:1.3,repeat:-1,yoyo:!0},">")};template=r=>`\n            <section class="win_container">\n                <h1>${r[0]}</h1>\n                <div class="sub-section">\n                    <i class="material-icons star_1">star</i>\n                    <h2>${r[1]}</h2>\n                    <i class="material-icons star_2">star</i>\n                </div>\n            </section>\n        `}class y{constructor(r){this.level=r,this.pokechecked=0,this.oportunities=0,this.savedCards=[],this.targets=[]}init=()=>{document.querySelectorAll(".pokecard").forEach((r=>{this.oportunities+=.5,r.addEventListener("click",(r=>{this.playGame(r)}))}))};playGame=r=>{let n=r.target,e=n.className.slice(9,n.className.length+1),t=n.className.slice(11,-2);if(0===this.pokechecked)gsap.to(`.${e} .cover_card`,{duration:.5,top:"-110%"}),this.savedCards.push(t),this.targets.push(n),this.targets[0].style.pointerEvents="none",this.pokechecked=1;else if(1===this.pokechecked){if(gsap.to(`.${e} .cover_card`,{duration:.5,top:"-110%"}),this.savedCards.push(t),this.targets.push(n),this.savedCards[0]===this.savedCards[1]||this.savedCards[0]+"_"==this.savedCards[1]+"_"||this.savedCards[0]===this.savedCards[1]+"_"||this.savedCards[0]+"_"===this.savedCards[1])if(n.style.pointerEvents="none",this.oportunities-=1,0===this.oportunities){let r=document.querySelector(".main_container"),n=new k({father:r,message:["You Win","Congratulations!"]}),e=r.firstElementChild,t=1.5;gsap.to(e,{duration:t,opacity:0,ease:Power2.easeIn}),setTimeout(n.winPage,1e3*t+300)}else this.pokechecked=0;else{let r=[this.targets[0].className.slice(9,this.targets[0].className.length),this.targets[1].className.slice(9,this.targets[1].className.length)];gsap.to([`.${r[0]} .cover_card`,`.${r[1]} .cover_card`],{duration:.5,top:"0%"},">+=1"),this.pokechecked=0}this.targets[0].style.pointerEvents="initial",this.savedCards=[],this.targets=[]}}}class z{constructor(r){this.config=r,this.levels=[0,3,4,5,6,8,10,12,15,20],this.pokemonsGetted=[],this.pokemonsMixed=[]}start=async()=>{this.level=document.querySelector("#input_level").value,this.boxesCont=this.levels[this.level],this.config.father.innerHTML='\n        <div class="loading_cont" id="loading_cont">\n            <i class="large material-icons">autorenew</i>\n        </div>\n    ',await this.getPokemons().then((r=>{this.mixPokemons(r),this.config.father.innerHTML=this.template(this.pokemonsMixed),document.querySelector(".game_cards_cont").appendChild(this.createCards(this.pokemonsMixed)),new y(this.level).init()}))};getPokemons=async()=>{let r=r=>{this.pokemonsGetted.push(r),this.pokemonsGetted.push(r)};for(let n=0;n<this.boxesCont;n++){let n,e=Math.floor(750*Math.random()+1);await fetch(`https://pokeapi.co/api/v2/pokemon/${e}`).then((r=>r.json())).then((r=>{n=r})),r(n)}return this.pokemonsGetted};mixPokemons=r=>{let n,e=r.length;for(this.pokemonsMixed=[...this.pokemonsGetted];0!=e;)n=Math.floor(Math.random()*e),e--,[this.pokemonsMixed[e],this.pokemonsMixed[n]]=[this.pokemonsMixed[n],this.pokemonsMixed[e]]};template=r=>`\n            <section class="game_container flex_center">\n                <h2>Level ${this.level}</h2>\n                <div class="game_cards_cont"></div>\n            </section>\n        `;createCards=r=>{let n;n="1"===this.level||"4"===this.level?3:"2"===this.level||"5"===this.level?4:"3"===this.level||"6"===this.level?5:"7"===this.level||"8"===this.level?6:8;let e=`repeat(${n}, 1fr)`;const t=I("ul");for(let n=0;n<r.length;n++){let o=I("li",["pokecard",`n_${r[n].name}_${n}`]),i=new Image;i.src=r[n].sprites.front_shiny,o.appendChild(i);let s=I("div",["cover_card"]),a=I("i",["material-icons","cover_card_icon"]),A=new Text("visibility");o.appendChild(s).appendChild(a).appendChild(A),t.appendChild(o),t.style.gridTemplateColumns=e}return t}}var S=e(402),Z={};Z.styleTagTransform=h(),Z.setAttributes=c(),Z.insert=A().bind(null,"head"),Z.domAPI=s(),Z.insertStyleElement=m(),o()(S.Z,Z),S.Z&&S.Z.locals&&S.Z.locals;const T=e.p+"d82ca458d38f59baa9f8.png";let M=function(){const r=I("link");r.rel="stylesheet",r.href="https://fonts.googleapis.com/icon?family=Material+Icons";const n=I("link");return n.rel="icon",n.type="image/x-icon",n.href=T,[r,n]}(),Y=function(){const r=I("main",["main_container","flex_center"]),n=I("script");n.src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.10.4/gsap.min.js";const e=new z({father:r});return new v({logo:"Guess Who",cta:"Start",callback:e.start}).createTemplate(r),[r,n]}();document.head.appendChild(M[1]),document.head.appendChild(M[0]),document.body.appendChild(Y[0]),document.body.appendChild(Y[1])}},r=>{r(r.s=656)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,